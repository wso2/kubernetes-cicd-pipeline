# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
# If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
wso2Username: ""
wso2Password: ""


jenkins:
  image:
    repository: "wso2/kubernetes-pipeline-jenkins"
    tag: "latest"
  # Admin credentials of jenkins instance to be created
  username: admin
  password: jenkins_admin
  ingress:
    enabled: true
    host: jenkins.example.com
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
#    tls:
#      - secretName: -tls
#        hosts:
#          - example.com

# This section is used to configure access to the docker repository where Jenkins will push images to.
registry:
  server: 'https://index.docker.io/v1/'
  username: <REGISTRY_USERNAME>
  password: <REGISTRY_PASSWORD>
  email: <REGISTRY_EMAIL>
  address: index.docker.io

# Github credentials
# An access token could be used instead of the password for controlling access.
github:
  username: <GITHUB_USERNAME>
  password: <GITHUB_PASSWORD>

# Values for Spinnaker chart
# Refer to https://github.com/helm/charts/blob/master/stable/spinnaker/values.yaml for more information on parameters.
spinnaker:
# Configure your Docker registries here to be used by Spinnaker
#  dockerRegistries:
#    - name: dockerhub
#      address: index.docker.io
#      username: <REGISTRY_USERNAME>
#      password: <REGISTRY_PASSWORD>
#      email: <REGISTRY_EMAIL>
#      repositories:
#        - org/repo
  halyard:
    spinnakerVersion: 1.17.3
    # image:
    #   tag: 1.20.2
    additionalScripts:
      create: true
      data:
        # This script is used to configure the Jenkins master with Spinnaker.
        # USERNAME and PASSWORD should match the credentials given in the jenkins tag
        enable_ci.sh: |-
          echo "Configuring jenkins master"
          USERNAME="admin"
          PASSWORD="jenkins_admin"
          $HAL_COMMAND config ci jenkins enable
          echo $PASSWORD | $HAL_COMMAND config ci jenkins master edit master --address http://jenkins-service.{{ .Release.Namespace }}.svc.cluster.local:8080 --username $USERNAME --password || echo $PASSWORD | $HAL_COMMAND config ci jenkins master add master --address http://jenkins-service.{{ .Release.Namespace }}.svc.cluster.local:8080 --username $USERNAME --password
          $HAL_COMMAND config features edit --pipeline-templates true
  ingress:
    enabled: true
    host: spinnaker.example.com
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
#    tls:
#      - secretName: -tls
#        hosts:
#          - example.com
  ingressGate:
    enabled: true
    host: gate.spinnaker.example.com
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
#    tls:
#     - secretName: -tls
#       hosts:
#         - example.com

kibana:
  nameOverride: "kibana"
  elasticsearchHosts: "http://wso2-elasticsearch-master:9200"
  ingress:
    enabled: true
    hosts:
      - kibana.example.com
#    tls:
#      - hosts:
#          - example.com
#        secretName: -tls
          
elasticsearch:
  minimumMasterNodes: 1
  replicas: 1
  imageTag: 7.3.0
  clusterName: wso2-elasticsearch
  persistence:
    enabled: false
  esJavaOpts: -Xms512m -Xmx512m

prometheus-operator:
  kubeEtcd: # Disable Etcd metrics
    enabled: false
  kubeControllerManager: #Disble KubeController Metrics
    enabled: false
  kubeScheduler: # Disable Scheduler metrics
    enabled: false
  alertmanager:  # Disable Alert Manager
    enabled: false
  kubeApiServer:
    enabled: false
  coreDns:
    enabled: false
  kubeProxy:
    enabeld: false
  prometheus:
    prometheusSpec:
      image:
        tag: v2.9.2
  grafana:
    image:
      tag: 6.1.6
    adminPassword: "admin"
    ingress:
      enabled: true
      annotations: 
        kubernetes.io/ingress.class: nginx
      hosts:
      - grafana.example.com
#      tls:
#        - hosts:
#            - example.com
#          secretName: -tls

nodeExporter:
  enabled: false
kubeStateMetrics:
    enabled: false

prometheus-blackbox-exporter:
  config: 
    modules:
      http_2xx:
        prober: http
        http:
          tls_config:
            insecure_skip_verify: true
